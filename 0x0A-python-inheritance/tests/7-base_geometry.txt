==========================================
        CASE TESTS FOR 7-base_geometry
==========================================

Import class from module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Testing area:  
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
      ...
    Exception: area() is not implemented
    >>> bg.area(4)
    Traceback (most recent call last):
      ...
    TypeError: area() takes 1 positional argument but 2 were given
    >>> bg.area(4, 12)
    Traceback (most recent call last):
      ...
    TypeError: area() takes 1 positional argument but 3 were given
    >>> bg.area('val')
    Traceback (most recent call last):
      ...
    TypeError: area() takes 1 positional argument but 2 were given

Testing integer_validator
    >>> bg.integer_validator()
    Traceback (most recent call last):
      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("my_int", 'yes')
    Traceback (most recent call last):
      ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator(3, 18)
    >>> bg.integer_validator(0, 0)
    Traceback (most recent call last):
      ...
    ValueError: 0 must be greater than 0
    >>> bg.integer_validator("my_int", True)
    Traceback (most recent call last):
      ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", -25)
    Traceback (most recent call last):
      ...
    ValueError: my_int must be greater than 0
    >>> bg.integer_validator("my_int")
    Traceback (most recent call last):
      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
    >>> bg.integer_validator("my_int", 5, 12)
    Traceback (most recent call last):
      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given
    >>> bg.integer_validator("my_int", None)
    Traceback (most recent call last):
      ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", [2, 1, 3])
    Traceback (most recent call last):
      ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("tuple", (12, "item"))
    Traceback (most recent call last):
      ...
    TypeError: tuple must be an integer
    >>> bg.integer_validator("dict", {})
    Traceback (most recent call last):
      ...
    TypeError: dict must be an integer
